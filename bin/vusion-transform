#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');
const vusion = require('vusion-api');
const inquirer = require('inquirer');
const chalk = require('chalk');
const logger = require('../lib/logger');
const exec = require('../lib/just-exec');
const execa = require('execa');

/**
 * Parse Commands
 */
const program = require('commander');
program
    .usage('<vue-path>')
    .description('Transform Vue file between singlefile and multifile pattern')
    .option('-f, --force', 'Force to transform')
    .option('-p, --package', 'Add package info')
    .option('-t, --type <type>', 'to component or block', 'component')
    .parse(process.argv);

const vuePath = program.args[0];
if (!vuePath) {
    logger.error('No vue path given!');
    process.exit(1);
} else if (!vuePath.endsWith('.vue')) {
    logger.error('Please specify a vue path!');
    process.exit(1);
}

if (program.package && !(program.type === 'component' || program.type === 'block')) {
    logger.error(`Unsupported type ${program.type}!`);
    process.exit(1);
}

const fullPath = path.resolve(process.cwd(), vuePath);

async function run() {
    const vueFile = new vusion.VueFile(fullPath);
    await vueFile.preOpen();

    if (program.package) {
        // 检查多文件 -> 单文件时，是否需要判断强制转换
        const checkResult = vueFile.checkTransform();
        if (!program.force && vueFile.isDirectory && checkResult !== true) {
            const { ok } = await inquirer.prompt([{
                type: 'confirm',
                name: 'ok',
                default: false,
                message: `多文件中包含 ${chalk.cyan(String(checkResult.slice(0, 3)))} 等特殊功能文件，
  转换成 package 会重置这些内容。是否强制转换？`,
            }]);
            if (!ok)
                return;
        }

        await vueFile.open();
        console.info(`Now transform to vusion ${program.type} package. Please complete some additional info.`);
        await execa(require.resolve('create-vusion/bin/create-vusion'), [program.type, '--force', vueFile.fileName], {
            cwd: path.dirname(fullPath),
            stdio: 'inherit',
        });

        if (!vueFile.isDirectory)
            vueFile.transform();
        await vueFile.save();
    } else {
        // 检查多文件 -> 单文件时，是否需要判断强制转换
        const checkResult = vueFile.checkTransform();
        if (!program.force && vueFile.isDirectory && checkResult !== true) {
            const { ok } = await inquirer.prompt([{
                type: 'confirm',
                name: 'ok',
                default: false,
                message: `多文件中包含 ${chalk.cyan(String(checkResult.slice(0, 3)))} 等特殊功能文件，
  转换成单文件会丢失这些内容。是否强制转换？`,
            }]);
            if (!ok)
                return;
        }

        await vueFile.open();
        vueFile.transform();
        await vueFile.save();

        logger.done(`${vueFile.fileName} 已成功由${vueFile.isDirectory ? '单文件 -转为-> 多文件' : '多文件 -转为-> 单文件'}！`);
    }
}

run();
